---
- hosts: aiok8s
  tasks:

  - name: Stopping Firewalld
    become: true
    systemd: 
      name: firewalld
      state: stopped
      enabled: no

  - name: modprobe br_netfilter
    become: true
    shell: "modprobe br_netfilter"

  - name: Enabling Bridge Firewall Rule in /etc/sysctl.conf
    become: true
    shell: "echo 'net.bridge.bridge-nf-call-iptables=1' >> /etc/sysctl.conf"

  - name: Set local port range 1024 65535 in /etc/sysctl.conf
    become: true
    shell: "echo 'net.ipv4.ip_local_port_range = 1024 65535' >> /etc/sysctl.conf"
 
  - name: Set file-max 5000000 in /etc/sysctl.conf
    become: true
    shell: "echo 'fs.file-max = 5000000' >> /etc/sysctl.conf"
 
  - name: Set somaxconn 500 in /etc/sysctl.conf
    become: true
    shell: "echo 'net.core.somaxconn = 500' >> /etc/sysctl.conf"
 
  - name: Set * soft nproc 65535 in /etc/security/limits.conf
    become: true
    shell: "echo '* soft nproc 65535' >> /etc/security/limits.conf"

  - name: Set * hard nproc 65535 in /etc/security/limits.conf
    become: true
    shell: "echo '* hard nproc 65535' >> /etc/security/limits.conf"

  - name: Set * soft nofile 65535 in /etc/security/limits.conf
    become: true
    shell: "echo '* soft nofile 65535' >> /etc/security/limits.conf"

  - name: Set * hard nofile 65535 in /etc/security/limits.conf
    become: true
    shell: "echo '* hard nofile 65535' >> /etc/security/limits.conf"

  - name: Calling sysctl -p
    become: true
    shell: "sysctl -p"

  - name: copy all binary files
    copy:
      src: binary
      dest: /home/centos

  - name: Installing rpm files
    become: true
    shell: "rpm -i --force /home/centos/binary/*.rpm"

  - name: emptying docker.service file
    become: true
    shell: "echo '' > /usr/lib/systemd/system/docker.service"

  - name: modify docker.service file
    become: true
    blockinfile:
      path: /usr/lib/systemd/system/docker.service
      block: |
       [Unit]
       Description=Docker Application Container Engine
       Documentation=https://docs.docker.com
       BindsTo=containerd.service
       After=network-online.target firewalld.service containerd.service
       Wants=network-online.target
       Requires=docker.socket
       
       [Service]
       Type=notify
       ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd
       ExecReload=/bin/kill -s HUP $MAINPID
       TimeoutSec=0
       RestartSec=2
       Restart=always
       StartLimitBurst=3
       StartLimitInterval=60s
       LimitNOFILE=infinity
       LimitNPROC=infinity
       LimitCORE=infinity
       TasksMax=infinity
       Delegate=yes
       KillMode=process
       
       [Install]
       WantedBy=multi-user.target

  - name: Reload daemon enable docker service and start it
    become: true
    systemd: 
      name: docker
      state: started
      enabled: yes
      daemon_reload: yes
 
  - name: Gunzip docker images
    shell: "gunzip /home/centos/binary/*.gz"

  - name: docker load
    become: true
    shell: |
      docker load -i /home/centos/binary/coredns.tar
      docker load -i /home/centos/binary/kube-apiserver.tar
      docker load -i /home/centos/binary/kube-controller-manager.tar
      docker load -i /home/centos/binary/kube-scheduler.tar
      docker load -i /home/centos/binary/kube-proxy.tar
      docker load -i /home/centos/binary/etcd.tar
      docker load -i /home/centos/binary/dashboard.tar
      docker load -i /home/centos/binary/metrics-scraper.tar
      docker load -i /home/centos/binary/pause.tar
      docker load -i /home/centos/binary/weave-kube.tar
      docker load -i /home/centos/binary/weave-npc.tar

  - name: Starting kubelet
    become: true
    systemd: 
      name: kubelet
      state: started
      enabled: yes

  - name: Running kubeadm init
    become: true
    shell: "kubeadm init --kubernetes-version=v1.18.6"

  - name: Copying required files
    shell: |
     mkdir -p /home/centos/.kube
     sudo cp -f /etc/kubernetes/admin.conf $HOME/.kube/config
     sudo chown $(id -u):$(id -g) /home/centos/.kube/config

  - name: Taint the master node
    shell: "kubectl taint nodes --all node-role.kubernetes.io/master-"

  - name: Installing networking plugin (Weave)
    shell: kubectl apply -f /home/centos/binary/weave.yml

  - name: Deploying the dashboard
    shell: kubectl apply -f /home/centos/binary/dashboard.yml

  - name: Creating admin-user.yml
    blockinfile:
     path: /home/centos/admin-user.yml
     create: yes
     block: |
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: admin-user
        namespace: kube-system
 
  - name: Creating clusterRoleBinding.yml
    blockinfile:
     path: /home/centos/clusterRoleBinding.yml
     create: yes
     block: |
      apiVersion: rbac.authorization.k8s.io/v1beta1
      kind: ClusterRoleBinding
      metadata:
        name: admin-user
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: ClusterRole
        name: cluster-admin
      subjects:
      - kind: ServiceAccount
        name: admin-user
        namespace: kube-system 

  - name: Creating admin user 
    shell: kubectl apply -f /home/centos/admin-user.yml

  - name: Creating clusterRoleBinding
    shell: kubectl apply -f /home/centos/clusterRoleBinding.yml

